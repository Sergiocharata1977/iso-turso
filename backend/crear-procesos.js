import { tursoClient } from './lib/tursoClient.js';

async function crearProcesos() {
  try {
    console.log('üöÄ Creando datos de procesos...');
    
    // Crear algunos procesos
    console.log('üîÑ Creando procesos...');
    
    await tursoClient.execute({
      sql: 'INSERT INTO procesos (id, nombre, codigo, descripcion, fecha_creacion) VALUES (?, ?, ?, ?, ?)',
      args: [
        'proc-001',
        'Gesti√≥n de Calidad',
        'GC-01',
        'Proceso para asegurar la calidad de los productos y servicios.',
        new Date().toISOString()
      ]
    });
    console.log('‚úÖ Proceso Gesti√≥n de Calidad creado');

    await tursoClient.execute({
      sql: 'INSERT INTO procesos (id, nombre, codigo, descripcion, fecha_creacion) VALUES (?, ?, ?, ?, ?)',
      args: [
        'proc-002',
        'Desarrollo de Software',
        'DS-01',
        'Proceso para el ciclo de vida del desarrollo de software.',
        new Date().toISOString()
      ]
    });
    console.log('‚úÖ Proceso Desarrollo de Software creado');

    await tursoClient.execute({
      sql: 'INSERT INTO procesos (id, nombre, codigo, descripcion, fecha_creacion) VALUES (?, ?, ?, ?, ?)',
      args: [
        'proc-003',
        'Atenci√≥n al Cliente',
        'AC-01',
        'Proceso para gestionar la relaci√≥n con los clientes y sus solicitudes.',
        new Date().toISOString()
      ]
    });
    console.log('‚úÖ Proceso Atenci√≥n al Cliente creado');

    // Verificar resultados
    const procesos = await tursoClient.execute('SELECT COUNT(*) as count FROM procesos');
    console.log(`üîÑ Procesos creados: ${procesos.rows[0].count}`);
    
    console.log('üéâ ¬°Datos de procesos creados exitosamente!');
    
  } catch (error) {
    console.error('‚ùå Error creando procesos:', error.message);
  }
}

crearProcesos();
