import express from 'express';
import { tursoClient } from '../lib/tursoClient.js';

const router = express.Router();

// GET /api/politica-calidad - Obtener todas las pol√≠ticas de calidad
router.get('/', async (req, res) => {
  try {
    console.log('üìã Obteniendo todas las pol√≠ticas de calidad...');
    const result = await tursoClient.execute({
      sql: 'SELECT * FROM politica_calidad WHERE organization_id = ? ORDER BY nombre',
      args: [req.user?.organization_id || 1]
    });
    
    console.log(`‚úÖ Encontradas ${result.rows.length} pol√≠ticas de calidad`);
    res.json(result.rows);
  } catch (error) {
    console.error('‚ùå Error al obtener pol√≠ticas de calidad:', error);
    res.status(500).json({ 
      status: 'error', 
      message: 'Error al obtener pol√≠ticas de calidad',
      error: error.message 
    });
  }
});

// GET /api/politica-calidad/:id - Obtener pol√≠tica de calidad por ID
router.get('/:id', async (req, res) => {
  try {
    const { id } = req.params;
    console.log(`üîç Buscando pol√≠tica de calidad con ID: ${id}`);
    
    const result = await tursoClient.execute({
      sql: 'SELECT * FROM politica_calidad WHERE id = ? AND organization_id = ?',
      args: [id, req.user?.organization_id || 1]
    });

    if (result.rows.length === 0) {
      return res.status(404).json({ 
        status: 'error', 
        message: 'Pol√≠tica de calidad no encontrada' 
      });
    }

    console.log(`‚úÖ Pol√≠tica de calidad encontrada: ${result.rows[0].nombre}`);
    res.json(result.rows[0]);
  } catch (error) {
    console.error('‚ùå Error al obtener pol√≠tica de calidad:', error);
    res.status(500).json({ 
      status: 'error', 
      message: 'Error al obtener pol√≠tica de calidad',
      error: error.message 
    });
  }
});

// POST /api/politica-calidad - Crear nueva pol√≠tica de calidad (ALTA)
router.post('/', async (req, res) => {
  try {
    const { 
      nombre, 
      politica_calidad, 
      alcance, 
      mapa_procesos, 
      organigrama 
    } = req.body;
    
    console.log('‚ûï Creando nueva pol√≠tica de calidad:', { nombre });

    // Validaci√≥n b√°sica
    if (!nombre) {
      return res.status(400).json({ 
        status: 'error', 
        message: 'El nombre es obligatorio' 
      });
    }

    // Generar ID √∫nico
    const id = `politica-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;

    const result = await tursoClient.execute({
      sql: `INSERT INTO politica_calidad (
        id, organization_id, nombre, politica_calidad, alcance, mapa_procesos, organigrama
      ) VALUES (?, ?, ?, ?, ?, ?, ?) RETURNING *`,
      args: [
        id,
        req.user?.organization_id || 1,
        nombre,
        politica_calidad || '',
        alcance || '',
        mapa_procesos || '',
        organigrama || ''
      ]
    });

    console.log(`‚úÖ Pol√≠tica de calidad creada con ID: ${result.rows[0].id}`);
    res.status(201).json(result.rows[0]);
  } catch (error) {
    console.error('‚ùå Error al crear pol√≠tica de calidad:', error);
    res.status(500).json({ 
      status: 'error', 
      message: 'Error al crear pol√≠tica de calidad',
      error: error.message 
    });
  }
});

// PUT /api/politica-calidad/:id - Actualizar pol√≠tica de calidad (MODIFICACI√ìN)
router.put('/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { 
      nombre, 
      politica_calidad, 
      alcance, 
      mapa_procesos, 
      organigrama,
      estado 
    } = req.body;
    
    console.log(`‚úèÔ∏è Actualizando pol√≠tica de calidad ID: ${id}`, { nombre });

    // Validaci√≥n b√°sica
    if (!nombre) {
      return res.status(400).json({ 
        status: 'error', 
        message: 'El nombre es obligatorio' 
      });
    }

    const result = await tursoClient.execute({
      sql: `UPDATE politica_calidad 
            SET nombre = ?, politica_calidad = ?, alcance = ?, mapa_procesos = ?, 
                organigrama = ?, estado = ?, updated_at = datetime('now', 'localtime')
            WHERE id = ? AND organization_id = ?
            RETURNING *`,
      args: [
        nombre,
        politica_calidad || '',
        alcance || '',
        mapa_procesos || '',
        organigrama || '',
        estado || 'activo',
        id,
        req.user?.organization_id || 1
      ]
    });

    if (result.rows.length === 0) {
      return res.status(404).json({ 
        status: 'error', 
        message: 'Pol√≠tica de calidad no encontrada' 
      });
    }

    console.log(`‚úÖ Pol√≠tica de calidad actualizada: ${result.rows[0].nombre}`);
    res.json(result.rows[0]);
  } catch (error) {
    console.error('‚ùå Error al actualizar pol√≠tica de calidad:', error);
    res.status(500).json({ 
      status: 'error', 
      message: 'Error al actualizar pol√≠tica de calidad',
      error: error.message 
    });
  }
});

// DELETE /api/politica-calidad/:id - Eliminar pol√≠tica de calidad (BAJA)
router.delete('/:id', async (req, res) => {
  try {
    const { id } = req.params;
    console.log(`üóëÔ∏è Eliminando pol√≠tica de calidad ID: ${id}`);

    // Verificar si existe antes de eliminar
    const checkResult = await tursoClient.execute({
      sql: 'SELECT nombre FROM politica_calidad WHERE id = ? AND organization_id = ?',
      args: [id, req.user?.organization_id || 1]
    });

    if (checkResult.rows.length === 0) {
      return res.status(404).json({ 
        status: 'error', 
        message: 'Pol√≠tica de calidad no encontrada' 
      });
    }

    // Eliminar el registro
    await tursoClient.execute({
      sql: 'DELETE FROM politica_calidad WHERE id = ? AND organization_id = ?',
      args: [id, req.user?.organization_id || 1]
    });

    console.log(`‚úÖ Pol√≠tica de calidad eliminada: ${checkResult.rows[0].nombre}`);
    res.json({ 
      status: 'success', 
      message: 'Pol√≠tica de calidad eliminada correctamente',
      deletedItem: checkResult.rows[0].nombre
    });
  } catch (error) {
    console.error('‚ùå Error al eliminar pol√≠tica de calidad:', error);
    res.status(500).json({ 
      status: 'error', 
      message: 'Error al eliminar pol√≠tica de calidad',
      error: error.message 
    });
  }
});

// GET /api/politica-calidad/search/:term - Buscar pol√≠ticas de calidad
router.get('/search/:term', async (req, res) => {
  try {
    const { term } = req.params;
    console.log(`üîç Buscando pol√≠ticas de calidad con t√©rmino: ${term}`);
    
    const result = await tursoClient.execute({
      sql: `SELECT * FROM politica_calidad 
            WHERE organization_id = ? 
            AND (nombre LIKE ? OR politica_calidad LIKE ? OR alcance LIKE ?)
            ORDER BY nombre`,
      args: [req.user?.organization_id || 1, `%${term}%`, `%${term}%`, `%${term}%`]
    });

    console.log(`‚úÖ Encontradas ${result.rows.length} pol√≠ticas de calidad que coinciden con "${term}"`);
    res.json(result.rows);
  } catch (error) {
    console.error('‚ùå Error al buscar pol√≠ticas de calidad:', error);
    res.status(500).json({ 
      status: 'error', 
      message: 'Error al buscar pol√≠ticas de calidad',
      error: error.message 
    });
  }
});

export default router; 