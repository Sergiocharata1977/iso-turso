import { createApiClient } from './apiService';

// Crear cliente API espec√≠fico para capacitaciones
const apiClient = createApiClient('/capacitaciones');

export const capacitacionesService = {
  // Obtener todas las capacitaciones
  async getAll() {
    console.log('üìã Obteniendo todas las capacitaciones...');
    try {
      const response = await apiClient.get('/');
      console.log(`‚úÖ ${response.length} capacitaciones obtenidas`);
      return response;
    } catch (error) {
      console.error('‚ùå Error al obtener capacitaciones:', error);
      throw new Error('Error al cargar las capacitaciones');
    }
  },

  // Obtener capacitaci√≥n por ID
  async getById(id) {
    console.log(`üîç Obteniendo capacitaci√≥n ID: ${id}`);
    try {
      const response = await apiClient.get(`/${id}`);
      console.log(`‚úÖ Capacitaci√≥n obtenida: ${response.titulo}`);
      return response;
    } catch (error) {
      console.error(`‚ùå Error al obtener capacitaci√≥n ID ${id}:`, error);
      throw new Error('Error al cargar la capacitaci√≥n');
    }
  },

  // Crear nueva capacitaci√≥n
  async create(capacitacion) {
    console.log('‚ûï Creando capacitaci√≥n:', capacitacion);
    try {
      const response = await apiClient.post('/', capacitacion);
      console.log(`‚úÖ Capacitaci√≥n creada: ${response.titulo}`);
      return response;
    } catch (error) {
      console.error('‚ùå Error al crear capacitaci√≥n:', error);
      throw new Error('Error al crear la capacitaci√≥n');
    }
  },

  // Actualizar capacitaci√≥n
  async update(id, capacitacion) {
    console.log(`‚úèÔ∏è Actualizando capacitaci√≥n ID: ${id}`, capacitacion);
    try {
      const response = await apiClient.put(`/${id}`, capacitacion);
      console.log(`‚úÖ Capacitaci√≥n actualizada: ${response.titulo}`);
      return response;
    } catch (error) {
      console.error(`‚ùå Error al actualizar capacitaci√≥n ID ${id}:`, error);
      throw new Error('Error al actualizar la capacitaci√≥n');
    }
  },

  // Eliminar capacitaci√≥n
  async delete(id) {
    console.log(`üóëÔ∏è Eliminando capacitaci√≥n ID: ${id}`);
    try {
      const response = await apiClient.delete(`/${id}`);
      console.log(`‚úÖ Capacitaci√≥n eliminada`);
      return response;
    } catch (error) {
      console.error(`‚ùå Error al eliminar capacitaci√≥n ID ${id}:`, error);
      throw new Error('Error al eliminar la capacitaci√≥n');
    }
  },

  // --- Evaluaciones de capacitaci√≥n ---
  async getEvaluaciones(capacitacionId) {
    try {
      return await apiClient.get(`/${capacitacionId}/evaluaciones`);
    } catch (error) {
      console.error('Error al obtener evaluaciones:', error);
      throw new Error('Error al obtener evaluaciones');
    }
  },
  async addEvaluacion(capacitacionId, evaluacion) {
    try {
      return await apiClient.post(`/${capacitacionId}/evaluaciones`, evaluacion);
    } catch (error) {
      console.error('Error al crear evaluaci√≥n:', error);
      throw new Error('Error al crear evaluaci√≥n');
    }
  },
  async updateEvaluacion(capacitacionId, evalId, evaluacion) {
    try {
      return await apiClient.put(`/${capacitacionId}/evaluaciones/${evalId}`, evaluacion);
    } catch (error) {
      console.error('Error al actualizar evaluaci√≥n:', error);
      throw new Error('Error al actualizar evaluaci√≥n');
    }
  },
  async deleteEvaluacion(capacitacionId, evalId) {
    try {
      return await apiClient.delete(`/${capacitacionId}/evaluaciones/${evalId}`);
    } catch (error) {
      console.error('Error al eliminar evaluaci√≥n:', error);
      throw new Error('Error al eliminar evaluaci√≥n');
    }
  },

  // --- Temas de capacitaci√≥n ---
  async getTemas(capacitacionId) {
    try {
      return await apiClient.get(`/${capacitacionId}/temas`);
    } catch (error) {
      console.error('Error al obtener temas:', error);
      throw new Error('Error al obtener temas');
    }
  }
};
